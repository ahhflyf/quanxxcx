const url = `https://www.kezaihui.com/saintpeter/user/business_groups/0fb2d1dbebc04b9ca376a0265f27539f/user_checkin_logs/`;
const method = `POST`;
const cookieKey_wh = 'Bearer_wh'
const sy = init();
var Valwh = sy.getdata(cookieKey_wh);
const headers = {
'Accept-Encoding' : `gzip,compress,br,deflate`,
'X-Mini-App-Version' : `st.4.5.4`,
'Connection' : `keep-alive`,
'content-type' : `application/json;charset=utf-8`,
'Referer' : `https://servicewechat.com/wxb30bdff4f9d568bc/9/page-frame.html`,
'Host' : `www.kezaihui.com`,
'X-Zh-Crumbs' : `{"client":"storehome","version":"st.4.5.4","sessionId":"1692179399210-0210492"}`,
'Authorization' : Valwh,
'User-Agent' : `Mozilla/5.0 (iPhone; CPU iPhone OS 17_0 like Mac OS X) AppleWebKit/605.1.15 (KHTML, like Gecko) Mobile/15E148 MicroMessenger/8.0.40(0x1800282c) NetType/4G Language/zh_CN`
};
const body = `{}`;

const myRequest = {
    url: url,
    method: method,
    headers: headers,
    body: body
};

$task.fetch(myRequest).then(response => {
    console.log(response.statusCode + "\n\n" + response.body);
const whresult = JSON.parse(response.body);
if (whresult.phone == "18621936380"){
    $notify("wh签到成功")}
    else if (response.statusCode == "401"){
    $notify("whcookie失效");}
    else {
    $notify("wh签到失败");}
    
    $done();
    
    
    $done();
}, reason => {
    console.log(reason.error);
    $done();
});


function init() {
  isSurge = () => {
    return undefined === this.$httpClient ? false : true
  }
  isQuanX = () => {
    return undefined === this.$task ? false : true
  }
  getdata = (key) => {
    if (isSurge()) return $persistentStore.read(key)
    if (isQuanX()) return $prefs.valueForKey(key)
  }
  setdata = (key, val) => {
    if (isSurge()) return $persistentStore.write(key, val)
    if (isQuanX()) return $prefs.setValueForKey(key, val)
  }
  msg = (title, subtitle, body) => {
    if (isSurge()) $notification.post(title, subtitle, body)
    if (isQuanX()) $notify(title, subtitle, body)
  }
  log = (message) => console.log(message)
  get = (url, cb) => {
    if (isSurge()) {
      $httpClient.get(url, cb)
    }
    if (isQuanX()) {
      url.method = 'GET'
      $task.fetch(url).then((resp) => cb(null, {}, resp.body))
    }
  }
  post = (options, callback) => {
    if (isQuanX()) {
      if (typeof options == "string") options = { url: options }
      options["method"] = "POST"
      $task.fetch(options).then(response => {
        response["status"] = response.statusCode
        callback(null, response, response.body)
      }, reason => callback(reason.error, null, null))
    }
    if (isSurge()) $httpClient.post(options, callback)
  }
  done = (value = {}) => {
    $done(value)
  }
  return { isSurge, isQuanX, msg, log, getdata, setdata, get, post, done }
}



function random(min, max) {
  return Math.floor(Math.random() * (max - min)) + min;
}
